{
  "address": "0x26B0fd51bf7Ed5BcC8B58aEcCDdaF026954E5094",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceSource_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "underlyingToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "shareToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceSource",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shareToken",
      "outputs": [
        {
          "internalType": "contract IYakStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingToken",
      "outputs": [
        {
          "internalType": "contract IERC20Metadata",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa7e06ea3c11f9a0e63dd76df043d20d88b0b96ebe82b62f8e96abefd40eb58c7",
  "receipt": {
    "to": null,
    "from": "0x9F8A5B35f5508071cf2304A670EAB0803F3737aa",
    "contractAddress": "0x26B0fd51bf7Ed5BcC8B58aEcCDdaF026954E5094",
    "transactionIndex": 0,
    "gasUsed": "662713",
    "logsBloom": "0x
    "blockHash": "0x1c852f984fa117c0c0187b6329454f76307e092530c7b8f09dc06609a26c0896",
    "transactionHash": "0xa7e06ea3c11f9a0e63dd76df043d20d88b0b96ebe82b62f8e96abefd40eb58c7",
    "logs": [],
    "blockNumber": 6395129,
    "cumulativeGasUsed": "662713",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0A77230d17318075983913bC2145DB16C7366156",
    "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
    "0xf6cCf601bd024612aAF85440153c2df0524E4607"
  ],
  "solcInputHash": "ad498b15575ade401ba46c95ca1f7bc3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceSource_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shareToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceSource\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shareToken\",\"outputs\":[{\"internalType\":\"contract IYakStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"apps/avai/src/contracts/oracles/YakJoeAVAX.sol\":\"YakAvaxJoeOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"apps/avai/src/contracts/OracleBridge.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\n\\nimport './interfaces/IYakStrategy.sol';\\n\\ncontract OracleBridge is AggregatorV3Interface {\\n  // Chainlink price source\\n  AggregatorV3Interface public immutable priceSource;\\n  IERC20Metadata public immutable underlyingToken;\\n\\n  // The YRT token\\n  IYakStrategy public immutable shareToken;\\n\\n  constructor(\\n    address priceSource_,\\n    address underlyingToken_,\\n    address shareToken_\\n  ) {\\n    assert(priceSource_ != address(0));\\n    assert(shareToken_ != address(0));\\n    assert(underlyingToken_ != address(0));\\n    priceSource = AggregatorV3Interface(priceSource_);\\n    underlyingToken = IERC20Metadata(underlyingToken_);\\n    shareToken = IYakStrategy(shareToken_); // YRT token\\n  }\\n\\n  function decimals() external view override returns (uint8) {\\n    return priceSource.decimals();\\n  }\\n\\n  function description() external view override returns (string memory) {\\n    return priceSource.description();\\n  }\\n\\n  function version() external view override returns (uint256) {\\n    return priceSource.version();\\n  }\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    )\\n  {\\n    return priceSource.getRoundData(_roundId);\\n  }\\n\\n  // The one we edit for compounder!\\n  function latestRoundData()\\n    external\\n    view\\n    override\\n    returns (\\n      uint80,\\n      int256,\\n      uint256,\\n      uint256,\\n      uint80\\n    )\\n  {\\n    // Lets do some calcs!\\n    (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    ) = priceSource.latestRoundData();\\n\\n    require(answer >= 0, 'Chainlink pricefeed returned bad value.');\\n    // Return price of 1 YRT\\n    uint256 newPrice = (shareToken.getDepositTokensForShares(\\n      10**underlyingToken.decimals()\\n    ) * uint256(answer)) / 10**underlyingToken.decimals();\\n\\n    return (roundId, int256(newPrice), startedAt, updatedAt, answeredInRound);\\n  }\\n}\\n\",\"keccak256\":\"0xbc671832c7fd4f94d29cb887007d6c654f620e46462134d1453d7847a92b1717\",\"license\":\"agpl-3.0\"},\"apps/avai/src/contracts/interfaces/IYakStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\n\\ninterface IYakStrategy is IERC20Metadata {\\n  function getSharesForDepositTokens(uint256 amount)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function getDepositTokensForShares(uint256 amount)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function totalDeposits() external view returns (uint256);\\n\\n  function estimateReinvestReward() external view returns (uint256);\\n\\n  function checkReward() external view returns (uint256);\\n\\n  function estimateDeployedBalance() external view returns (uint256);\\n\\n  function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe88e85f05d5ec5e594d80b527be19db90642b5dcf1c1d181eb6e99602f68f578\",\"license\":\"agpl-3.0\"},\"apps/avai/src/contracts/oracles/YakJoeAVAX.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport '../OracleBridge.sol';\\n\\ncontract YakAvaxJoeOracle is OracleBridge {\\n  constructor(\\n    address priceSource_,\\n    address underlyingToken_,\\n    address shareToken_\\n  ) OracleBridge(priceSource_, underlyingToken_, shareToken_) {}\\n}\\n\",\"keccak256\":\"0xddd7a161b9d99cb011510aafcd1960b4b5b62ae2a0dcda7d1258efc0df4511fd\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b50604051610c90380380610c9083398101604081905261002f916100e5565b8282826001600160a01b03831661005657634e487b7160e01b600052600160045260246000fd5b6001600160a01b03811661007a57634e487b7160e01b600052600160045260246000fd5b6001600160a01b03821661009e57634e487b7160e01b600052600160045260246000fd5b6001600160601b0319606093841b811660805291831b821660a05290911b1660c05250610127915050565b80516001600160a01b03811681146100e057600080fd5b919050565b6000806000606084860312156100f9578283fd5b610102846100c9565b9250610110602085016100c9565b915061011e604085016100c9565b90509250925092565b60805160601c60a05160601c60c05160601c610afb6101956000396000818161012d015261063101526000818160d60152818161059401526106600152600081816092015281816101ba01528181610252015281816102e5015281816103c501526104620152610afb6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636c9fa59e1161005b5780636c9fa59e146101285780637284e4161461014f5780639a6fc8f514610164578063feaf968c146101ae57600080fd5b806320531bc91461008d5780632495a599146100d1578063313ce567146100f857806354fd4d5014610112575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101006101b6565b60405160ff90911681526020016100c8565b61011a61024e565b6040519081526020016100c8565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101576102e1565b6040516100c891906108ec565b610177610172366004610851565b610378565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100c8565b610177610451565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561021157600080fd5b505afa158015610225573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024991906108cb565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a957600080fd5b505afa1580156102bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102499190610839565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637284e4166040518163ffffffff1660e01b815260040160006040518083038186803b15801561033c57600080fd5b505afa158015610350573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102499190810190610790565b6040517f9a6fc8f500000000000000000000000000000000000000000000000000000000815269ffffffffffffffffffff8216600482015260009081908190819081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a6fc8f59060240160a06040518083038186803b15801561040757600080fd5b505afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190610874565b939a9299509097509550909350915050565b6000806000806000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156104b957600080fd5b505afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190610874565b945094509450945094506000841215610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f436861696e6c696e6b207072696365666565642072657475726e65642062616460448201527f2076616c75652e00000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156105eb57600080fd5b505afa1580156105ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062391906108cb565b61062e90600a610982565b857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab89a5a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b757600080fd5b505afa1580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef91906108cb565b6106fa90600a610982565b6040518263ffffffff1660e01b815260040161071891815260200190565b60206040518083038186803b15801561073057600080fd5b505afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610839565b6107729190610a2f565b61077c919061091f565b959b959a5092985090965094509192505050565b6000602082840312156107a1578081fd5b815167ffffffffffffffff808211156107b8578283fd5b818401915084601f8301126107cb578283fd5b8151818111156107dd576107dd610a94565b604051601f8201601f19908116603f0116810190838211818310171561080557610805610a94565b8160405282815287602084870101111561081d578586fd5b61082e836020830160208801610a4e565b979650505050505050565b60006020828403121561084a578081fd5b5051919050565b600060208284031215610862578081fd5b813561086d81610aaa565b9392505050565b600080600080600060a0868803121561088b578081fd5b855161089681610aaa565b8095505060208601519350604086015192506060860151915060808601516108bd81610aaa565b809150509295509295909350565b6000602082840312156108dc578081fd5b815160ff8116811461086d578182fd5b602081526000825180602084015261090b816040850160208701610a4e565b601f01601f19169190910160400192915050565b60008261093a57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561097a57816000190482111561096057610960610a7e565b8085161561096d57918102915b93841c9390800290610944565b509250929050565b600061086d60ff84168360008261099b57506001610a29565b816109a857506000610a29565b81600181146109be57600281146109c8576109e4565b6001915050610a29565b60ff8411156109d9576109d9610a7e565b50506001821b610a29565b5060208310610133831016604e8410600b8410161715610a07575081810a610a29565b610a11838361093f565b8060001904821115610a2557610a25610a7e565b0290505b92915050565b6000816000190483118215151615610a4957610a49610a7e565b500290565b60005b83811015610a69578181015183820152602001610a51565b83811115610a78576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b69ffffffffffffffffffff81168114610ac257600080fd5b5056fea264697066735822122035281959109771fb9d5e246dba386f8da9562a1191c1347350b6a4ba25344b6064736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80636c9fa59e1161005b5780636c9fa59e146101285780637284e4161461014f5780639a6fc8f514610164578063feaf968c146101ae57600080fd5b806320531bc91461008d5780632495a599146100d1578063313ce567146100f857806354fd4d5014610112575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101006101b6565b60405160ff90911681526020016100c8565b61011a61024e565b6040519081526020016100c8565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101576102e1565b6040516100c891906108ec565b610177610172366004610851565b610378565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100c8565b610177610451565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561021157600080fd5b505afa158015610225573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024991906108cb565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a957600080fd5b505afa1580156102bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102499190610839565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637284e4166040518163ffffffff1660e01b815260040160006040518083038186803b15801561033c57600080fd5b505afa158015610350573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102499190810190610790565b6040517f9a6fc8f500000000000000000000000000000000000000000000000000000000815269ffffffffffffffffffff8216600482015260009081908190819081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a6fc8f59060240160a06040518083038186803b15801561040757600080fd5b505afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190610874565b939a9299509097509550909350915050565b6000806000806000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156104b957600080fd5b505afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190610874565b945094509450945094506000841215610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f436861696e6c696e6b207072696365666565642072657475726e65642062616460448201527f2076616c75652e00000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156105eb57600080fd5b505afa1580156105ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062391906108cb565b61062e90600a610982565b857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab89a5a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b757600080fd5b505afa1580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef91906108cb565b6106fa90600a610982565b6040518263ffffffff1660e01b815260040161071891815260200190565b60206040518083038186803b15801561073057600080fd5b505afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610839565b6107729190610a2f565b61077c919061091f565b959b959a5092985090965094509192505050565b6000602082840312156107a1578081fd5b815167ffffffffffffffff808211156107b8578283fd5b818401915084601f8301126107cb578283fd5b8151818111156107dd576107dd610a94565b604051601f8201601f19908116603f0116810190838211818310171561080557610805610a94565b8160405282815287602084870101111561081d578586fd5b61082e836020830160208801610a4e565b979650505050505050565b60006020828403121561084a578081fd5b5051919050565b600060208284031215610862578081fd5b813561086d81610aaa565b9392505050565b600080600080600060a0868803121561088b578081fd5b855161089681610aaa565b8095505060208601519350604086015192506060860151915060808601516108bd81610aaa565b809150509295509295909350565b6000602082840312156108dc578081fd5b815160ff8116811461086d578182fd5b602081526000825180602084015261090b816040850160208701610a4e565b601f01601f19169190910160400192915050565b60008261093a57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561097a57816000190482111561096057610960610a7e565b8085161561096d57918102915b93841c9390800290610944565b509250929050565b600061086d60ff84168360008261099b57506001610a29565b816109a857506000610a29565b81600181146109be57600281146109c8576109e4565b6001915050610a29565b60ff8411156109d9576109d9610a7e565b50506001821b610a29565b5060208310610133831016604e8410600b8410161715610a07575081810a610a29565b610a11838361093f565b8060001904821115610a2557610a25610a7e565b0290505b92915050565b6000816000190483118215151615610a4957610a49610a7e565b500290565b60005b83811015610a69578181015183820152602001610a51565b83811115610a78576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b69ffffffffffffffffffff81168114610ac257600080fd5b5056fea264697066735822122035281959109771fb9d5e246dba386f8da9562a1191c1347350b6a4ba25344b6064736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
