/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrcaStaking, OrcaStakingInterface } from "../OrcaStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardsPerSecond",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "addressType",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "ChangedAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "oldEndTimestamp",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newEndTimestamp",
        type: "uint256",
      },
    ],
    name: "ChangedRewardsEndTimestamp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "oldRewardsPerSecond",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newRewardsPerSecond",
        type: "uint256",
      },
    ],
    name: "ChangedRewardsPerSecond",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldTreasury",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "ChangedTreasury",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAllocPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardStartTimestamp",
        type: "uint256",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldAllocPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAllocPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTotalAllocPoints",
        type: "uint256",
      },
    ],
    name: "PoolUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
    ],
    name: "SetRewardsStartTimestamp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addRewardsBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accRewardsPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRewardsPerSecond",
        type: "uint256",
      },
    ],
    name: "setRewardsPerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardTokenDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d1a38038062001d1a833981016040819052620000349162000155565b6200003f3362000105565b60018055821562000051578262000053565b425b60078190556040517f457596c4aedbe8a498e6b9a94fa90cbba7bd432ddba1f7e75e85bcf5e363917190600090a2600282905560405182906000907f6c5ac63fafcfaaa35808336a9aef07619736abe0349beeb783a3a8ab67936c81908290a3600580546001600160a01b0319166001600160a01b0383169081179091556040516000907f92baf9e44dc2c4a1b340703c85280df149c4b752279af909b2798a3a248de858908290a35050506200019b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156200016a578283fd5b83516020850151604086015191945092506001600160a01b038116811462000190578182fd5b809150509250925092565b611b6f80620001ab6000396000f3fe60806040526004361061018f5760003560e01c80638dbb1e3a116100d6578063e2bbb1581161007f578063f0f4426011610059578063f0f4426014610484578063f2fde38b146104a4578063f592c5d4146104c457600080fd5b8063e2bbb15814610438578063e6fd48bc14610458578063eacdaabc1461046e57600080fd5b8063a85adeab116100b0578063a85adeab146103e2578063cbeb09aa146103f8578063d18df53c1461041857600080fd5b80638dbb1e3a1461034957806393f1a40b14610369578063a519121a146103bd57600080fd5b80635312ea8e1161013857806364482f791161011257806364482f79146102f6578063715018a6146103165780638da5cb5b1461032b57600080fd5b80635312ea8e1461028957806361d027b3146102a9578063630b5ba1146102e157600080fd5b80631eaaa045116101695780631eaaa04514610227578063441a3e701461024957806351eb05a61461026957600080fd5b8063081e3eda1461019b5780631526fe27146101bf57806317caf6f11461021157600080fd5b3661019657005b600080fd5b3480156101a757600080fd5b506003545b6040519081526020015b60405180910390f35b3480156101cb57600080fd5b506101df6101da366004611941565b6104cc565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0016101b6565b34801561021d57600080fd5b506101ac60065481565b34801561023357600080fd5b50610247610242366004611984565b610517565b005b34801561025557600080fd5b506102476102643660046119c3565b610742565b34801561027557600080fd5b50610247610284366004611941565b61086e565b34801561029557600080fd5b506102476102a4366004611941565b610943565b3480156102b557600080fd5b506005546102c9906001600160a01b031681565b6040516001600160a01b0390911681526020016101b6565b3480156102ed57600080fd5b50610247610a6e565b34801561030257600080fd5b506102476103113660046119e4565b610a97565b34801561032257600080fd5b50610247610c0d565b34801561033757600080fd5b506000546001600160a01b03166102c9565b34801561035557600080fd5b506101ac6103643660046119c3565b610c73565b34801561037557600080fd5b506103a8610384366004611959565b60046020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101b6565b3480156103c957600080fd5b506103d2610cad565b60405190151581526020016101b6565b3480156103ee57600080fd5b506101ac60085481565b34801561040457600080fd5b50610247610413366004611941565b610ce1565b34801561042457600080fd5b506101ac610433366004611959565b610daa565b34801561044457600080fd5b506102476104533660046119c3565b610ee8565b34801561046457600080fd5b506101ac60075481565b34801561047a57600080fd5b506101ac60025481565b34801561049057600080fd5b5061024761049f36600461190b565b610f9a565b3480156104b057600080fd5b506102476104bf36600461190b565b611053565b610247611132565b600381815481106104dc57600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909185565b6000546001600160a01b031633146105765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b801561058457610584610a6e565b6000600754421161059757600754610599565b425b9050600654600014156105ae576105ae6111c3565b836006546105bc9190611a60565b6006556040805160a0810182526001600160a01b03858116808352602083018881529383018581526000606085018181526080860182815260038054600180820183559482905297517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6005909902988901805473ffffffffffffffffffffffffffffffffffffffff1916919098161790965596517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c87015591517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d86015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e85015593517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f909301929092555490916106f791611ab7565b60065460408051888152602081019290925281018490527fdcad60f82308d160bd8a3814cf84788a2c98294718485b86d238d14cbf166dab906060015b60405180910390a350505050565b600260015414156107955760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056d565b60026001558061080d5760405162461bcd60e51b815260206004820152602560248201527f5374616b696e673a3a77697468647261773a20616d6f756e74206d757374206260448201527f65203e2030000000000000000000000000000000000000000000000000000000606482015260840161056d565b60006003838154811061083057634e487b7160e01b600052603260045260246000fd5b600091825260208083208684526004825260408085203386529092529220600590910290910191506108648484848461124e565b5050600180555050565b60006003828154811061089157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502019050806002015442116108b0575050565b6004810154806108c557504260029091015550565b60006108d5836002015442610c73565b905060006006548460010154600254846108ef9190611a98565b6108f99190611a98565b6109039190611a78565b9050826109158264e8d4a51000611a98565b61091f9190611a78565b846003015461092e9190611a60565b60038501555050426002909201919091555050565b600260015414156109965760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056d565b60026001819055506000600382815481106109c157634e487b7160e01b600052603260045260246000fd5b60009182526020808320858452600482526040808520338652909252922080546005909202909201925015610a655780546004830154610a019190611ab7565b600483015580548254610a21916001600160a01b039091169033906113b4565b8054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a3600080825560018201555b50506001805550565b60005b600354811015610a9457610a848161086e565b610a8d81611afa565b9050610a71565b50565b6000546001600160a01b03163314610af15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b8015610aff57610aff610a6e565b8160038481548110610b2157634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160010154600654610b409190611ab7565b610b4a9190611a60565b600681905550827fb0a2ded49817748754bcca0474b24011f01d4574dd5c40e14197ffa2e6540fef60038581548110610b9357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016001015484600654604051610bc9939291909283526020830191909152604082015260600190565b60405180910390a28160038481548110610bf357634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020160010181905550505050565b6000546001600160a01b03163314610c675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b610c716000611462565b565b6000806008548311610c855782610c89565b6008545b9050838111610c99576000610ca3565b610ca38482611ab7565b9150505b92915050565b60006007544210158015610cc357506008544211155b8015610cd157506000600654115b610cdb5750600090565b50600190565b33610cf46000546001600160a01b031690565b6001600160a01b03161480610d1357506005546001600160a01b031633145b610d6e5760405162461bcd60e51b815260206004820152602660248201527f43616e6e6f7420646f20746869732c206e6f74206f776e6572206f722074726560448201526530b9bab93c9760d11b606482015260840161056d565b6002546040518291907f6c5ac63fafcfaaa35808336a9aef07619736abe0349beeb783a3a8ab67936c8190600090a36002819055610a946111c3565b60008060038481548110610dce57634e487b7160e01b600052603260045260246000fd5b60009182526020808320878452600480835260408086206001600160a01b038a168752909352919093206003600590930290930191820154908201546002830154929450909142118015610e2157508015155b15610e8f576000610e36856002015442610c73565b90506000600654866001015460025484610e509190611a98565b610e5a9190611a98565b610e649190611a78565b905082610e768264e8d4a51000611a98565b610e809190611a78565b610e8a9085611a60565b935050505b600064e8d4a51000838560000154610ea79190611a98565b610eb19190611a78565b90508360010154811015610ecd57600095505050505050610ca7565b6001840154610edc9082611ab7565b98975050505050505050565b60026001541415610f3b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056d565b6002600181905550600060038381548110610f6657634e487b7160e01b600052603260045260246000fd5b60009182526020808320868452600482526040808520338652909252922060059091029091019150610864848484846114bf565b6000546001600160a01b03163314610ff45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f92baf9e44dc2c4a1b340703c85280df149c4b752279af909b2798a3a248de85890600090a35050565b6000546001600160a01b031633146110ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b6001600160a01b0381166111295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161056d565b610a9481611462565b336111456000546001600160a01b031690565b6001600160a01b0316148061116457506005546001600160a01b031633145b6111bf5760405162461bcd60e51b815260206004820152602660248201527f43616e6e6f7420646f20746869732c206e6f74206f776e6572206f722074726560448201526530b9bab93c9760d11b606482015260840161056d565b610c715b60025415610c715760006007544210156111df576007546111e1565b425b90506000600254476111f39190611a78565b6111fd9083611a60565b9050818111801561121057506008548114155b1561124a576008546040518291907fc27995de4b73bfe8fa8c957b4ae89e3113185c3d9e2c6e3bf680ce10708218e590600090a360088190555b5050565b80548311156112c55760405162461bcd60e51b815260206004820152602960248201527f5374616b696e673a3a5f77697468647261773a20616d6f756e74203e2075736560448201527f722062616c616e63650000000000000000000000000000000000000000000000606482015260840161056d565b6112ce8461086e565b6000816001015464e8d4a51000846003015484600001546112ef9190611a98565b6112f99190611a78565b6113039190611ab7565b8254909150611313908590611ab7565b808355600384015464e8d4a510009161132c9190611a98565b6113369190611a78565b6001830155801561134b5761134b33826115ad565b83836004015461135b9190611ab7565b60048401558254611376906001600160a01b031633866113b4565b604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b6040516001600160a01b03831660248201526044810182905261145d9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611628565b505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114c88461086e565b805415611518576000816001015464e8d4a51000846003015484600001546114f09190611a98565b6114fa9190611a78565b6115049190611ab7565b905080156115165761151633826115ad565b505b815461152f906001600160a01b031633308661170d565b82826004015461153f9190611a60565b60048301558054611551908490611a60565b808255600383015464e8d4a510009161156a9190611a98565b6115749190611a78565b6001820155604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590602001610734565b47808211156115f2576040516001600160a01b0384169082156108fc029083906000818181858888f193505050501580156115ec573d6000803e3d6000fd5b50505050565b6040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156115ec573d6000803e3d6000fd5b600061167d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661175e9092919063ffffffff16565b80519091501561145d578080602001905181019061169b9190611925565b61145d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161056d565b6040516001600160a01b03808516602483015283166044820152606481018290526115ec9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016113f9565b606061176d8484600085611777565b90505b9392505050565b6060824710156117ef5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161056d565b843b61183d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161056d565b600080866001600160a01b031685876040516118599190611a11565b60006040518083038185875af1925050503d8060008114611896576040519150601f19603f3d011682016040523d82523d6000602084013e61189b565b606091505b50915091506118ab8282866118b6565b979650505050505050565b606083156118c5575081611770565b8251156118d55782518084602001fd5b8160405162461bcd60e51b815260040161056d9190611a2d565b80356001600160a01b038116811461190657600080fd5b919050565b60006020828403121561191c578081fd5b611770826118ef565b600060208284031215611936578081fd5b815161177081611b2b565b600060208284031215611952578081fd5b5035919050565b6000806040838503121561196b578081fd5b8235915061197b602084016118ef565b90509250929050565b600080600060608486031215611998578081fd5b833592506119a8602085016118ef565b915060408401356119b881611b2b565b809150509250925092565b600080604083850312156119d5578182fd5b50508035926020909101359150565b6000806000606084860312156119f8578283fd5b833592506020840135915060408401356119b881611b2b565b60008251611a23818460208701611ace565b9190910192915050565b6020815260008251806020840152611a4c816040850160208701611ace565b601f01601f19169190910160400192915050565b60008219821115611a7357611a73611b15565b500190565b600082611a9357634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611ab257611ab2611b15565b500290565b600082821015611ac957611ac9611b15565b500390565b60005b83811015611ae9578181015183820152602001611ad1565b838111156115ec5750506000910152565b6000600019821415611b0e57611b0e611b15565b5060010190565b634e487b7160e01b600052601160045260246000fd5b8015158114610a9457600080fdfea26469706673582212203a52a5ddff1ea557b98b72903ae953e68dde013c2250ea79c89b74b55c5ba10d64736f6c63430008040033";

export class OrcaStaking__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _startTimestamp: BigNumberish,
    _rewardsPerSecond: BigNumberish,
    _treasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrcaStaking> {
    return super.deploy(
      _startTimestamp,
      _rewardsPerSecond,
      _treasury,
      overrides || {}
    ) as Promise<OrcaStaking>;
  }
  getDeployTransaction(
    _startTimestamp: BigNumberish,
    _rewardsPerSecond: BigNumberish,
    _treasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _startTimestamp,
      _rewardsPerSecond,
      _treasury,
      overrides || {}
    );
  }
  attach(address: string): OrcaStaking {
    return super.attach(address) as OrcaStaking;
  }
  connect(signer: Signer): OrcaStaking__factory {
    return super.connect(signer) as OrcaStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrcaStakingInterface {
    return new utils.Interface(_abi) as OrcaStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrcaStaking {
    return new Contract(address, _abi, signerOrProvider) as OrcaStaking;
  }
}
