/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AVAXLiquidator,
  AVAXLiquidatorInterface,
} from "../AVAXLiquidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stablecoin",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "CreateVaultType",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId_",
        type: "uint256",
      },
    ],
    name: "checkCollat",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId_",
        type: "uint256",
      },
    ],
    name: "checkCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId_",
        type: "uint256",
      },
    ],
    name: "checkExtract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId_",
        type: "uint256",
      },
    ],
    name: "checkLiquidation",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId_",
        type: "uint256",
      },
    ],
    name: "checkValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "debtRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gainRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPaid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId_",
        type: "uint256",
      },
    ],
    name: "liquidateVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debtRatio_",
        type: "uint256",
      },
    ],
    name: "setDebtRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gainRatio_",
        type: "uint256",
      },
    ],
    name: "setGainRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury_",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract Stablecoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract BaseVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e5638038062001e568339810160408190526200003491620001db565b6001600055818162000046336200016c565b6001600160a01b038216620000b45760405162461bcd60e51b815260206004820152602960248201527f43616e6e6f742073657420737461626c65636f696e20746f20746865207a65726044820152686f206164647265737360b81b60648201526084015b60405180910390fd5b6001600160a01b038116620001185760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f7420736574207661756c7420746f20746865207a65726f206164646044820152637265737360e01b6064820152608401620000ab565b600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169181169190911790915560026005819055600b600655609660075580549091163317905550620002129050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001d657600080fd5b919050565b60008060408385031215620001ee578182fd5b620001f983620001be565b91506200020960208401620001be565b90509250929050565b611c3480620002226000396000f3fe6080604052600436106101485760003560e01c806390cf0bba116100c0578063eb6a887d11610074578063f2fde38b11610059578063f2fde38b14610399578063fbfa77cf146103b9578063ffc73da7146103d957600080fd5b8063eb6a887d14610359578063f0f442601461037957600080fd5b8063cea55f57116100a5578063cea55f571461030e578063cf41d6f814610324578063e9cbd8221461033957600080fd5b806390cf0bba146102ce578063b86f6aef146102ee57600080fd5b8063715018a6116101175780637b53f790116100fc5780637b53f790146102395780638da5cb5b1461026e5780638f11039d1461028c57600080fd5b8063715018a6146101f55780637558abc81461020c57600080fd5b806311b4a83214610154578063311f392a1461018757806356572ac01461019d57806361d027b3146101bd57600080fd5b3661014f57005b600080fd5b34801561016057600080fd5b5061017461016f366004611b35565b6103f9565b6040519081526020015b60405180910390f35b34801561019357600080fd5b5061017460065481565b3480156101a957600080fd5b506101746101b8366004611b35565b6105ff565b3480156101c957600080fd5b506002546101dd906001600160a01b031681565b6040516001600160a01b03909116815260200161017e565b34801561020157600080fd5b5061020a6107b5565b005b34801561021857600080fd5b50610174610227366004611add565b60086020526000908152604090205481565b34801561024557600080fd5b50610259610254366004611b35565b61081b565b6040805192835260208301919091520161017e565b34801561027a57600080fd5b506001546001600160a01b03166101dd565b34801561029857600080fd5b506102ac6102a7366004611b35565b610917565b604080519415158552602085019390935291830152606082015260800161017e565b3480156102da57600080fd5b5061020a6102e9366004611b35565b610b38565b3480156102fa57600080fd5b5061020a610309366004611b35565b611231565b34801561031a57600080fd5b5061017460055481565b34801561033057600080fd5b5061020a6113b4565b34801561034557600080fd5b506003546101dd906001600160a01b031681565b34801561036557600080fd5b5061020a610374366004611b35565b6114b1565b34801561038557600080fd5b5061020a610394366004611add565b611510565b3480156103a557600080fd5b5061020a6103b4366004611add565b61161a565b3480156103c557600080fd5b506004546101dd906001600160a01b031681565b3480156103e557600080fd5b5061020a6103f4366004611b35565b6116f9565b6004805460405163a525323d60e01b81529182018390526000916001600160a01b039091169063a525323d9060240160206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611b15565b6104bc5760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081b5d5cdd08195e1a5cdd60821b60448201526064015b60405180910390fd5b6004805460405163d4a9b2c560e01b81529182018490526000916105d6916001600160a01b03169063d4a9b2c5906024015b60206040518083038186803b15801561050657600080fd5b505afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e9190611b4d565b600480546040517fd310f49b0000000000000000000000000000000000000000000000000000000081529182018790526001600160a01b03169063d310f49b9060240160206040518083038186803b15801561059957600080fd5b505afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190611b4d565b611758565b91506105e890506305f5e10082611b7d565b9050600554816105f89190611b7d565b9392505050565b6004805460405163a525323d60e01b81529182018390526000916001600160a01b039091169063a525323d9060240160206040518083038186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190611b15565b6106bd5760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081b5d5cdd08195e1a5cdd60821b60448201526064016104b3565b6004805460405163d4a9b2c560e01b81529182018490526000916106f3916001600160a01b03169063d4a9b2c5906024016104ee565b9150506000600554600460009054906101000a90046001600160a01b03166001600160a01b031663048de3816040518163ffffffff1660e01b815260040160206040518083038186803b15801561074957600080fd5b505afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107819190611b4d565b61078c90600a611b9d565b6107969190611b9d565b6006546107a39084611b9d565b6107ad9190611b7d565b949350505050565b6001546001600160a01b0316331461080f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b6108196000611a4f565b565b6004805460405163a525323d60e01b815291820183905260009182916001600160a01b03169063a525323d9060240160206040518083038186803b15801561086257600080fd5b505afa158015610876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089a9190611b15565b6108d95760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081b5d5cdd08195e1a5cdd60821b60448201526064016104b3565b6004805460405163d4a9b2c560e01b815291820185905261090e916001600160a01b039091169063d4a9b2c5906024016104ee565b91509150915091565b6004805460405163a525323d60e01b81529182018390526000918291829182916001600160a01b03169063a525323d9060240160206040518083038186803b15801561096257600080fd5b505afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190611b15565b6109d95760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081b5d5cdd08195e1a5cdd60821b60448201526064016104b3565b60006109e4866103f9565b905060006109f1876105ff565b6004805460405163d4a9b2c560e01b81529182018a905291925060009183916001600160a01b039091169063d4a9b2c59060240160206040518083038186803b158015610a3d57600080fd5b505afa158015610a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a759190611b4d565b610a7f9190611bbc565b6004805460405163d4a9b2c560e01b81529293506001600160a01b03169163d4a9b2c591610ab3918c910190815260200190565b60206040518083038186803b158015610acb57600080fd5b505afa158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b039190611b4d565b811115610b2057634e487b7160e01b600052600160045260246000fd5b610b2a8184611aae565b989097509195509350915050565b60026000541415610b8b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104b3565b60026000556004805460405163a525323d60e01b81529182018390526001600160a01b03169063a525323d9060240160206040518083038186803b158015610bd257600080fd5b505afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190611b15565b610c495760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081b5d5cdd08195e1a5cdd60821b60448201526064016104b3565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610c8d57600080fd5b505afa158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc59190611b4d565b6003546002546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101849052929350169063a9059cbb90604401602060405180830381600087803b158015610d3057600080fd5b505af1158015610d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d689190611b15565b610db45760405162461bcd60e51b815260206004820152601f60248201527f44757374206661696c656420746f2073656e6420746f2074726561737572790060448201526064016104b3565b600480546040517f6352211e0000000000000000000000000000000000000000000000000000000081529182018490526000916001600160a01b0390911690636352211e9060240160206040518083038186803b158015610e1457600080fd5b505afa158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190611af9565b9050610e5783611231565b6000610e62846105ff565b90506000610e6f856103f9565b6003546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610edb57600080fd5b505af1158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f139190611b15565b610f855760405162461bcd60e51b815260206004820152602760248201527f556e61626c6520746f2073656e6420737461626c65636f696e20746f206c697160448201527f75696461746f720000000000000000000000000000000000000000000000000060648201526084016104b3565b600480546040517fce77f2430000000000000000000000000000000000000000000000000000000081529182018790526001600160a01b03169063ce77f24390602401600060405180830381600087803b158015610fe257600080fd5b505af1158015610ff6573d6000803e3d6000fd5b50506003546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b15801561104057600080fd5b505afa158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190611b4d565b600480546040517f85af3c160000000000000000000000000000000000000000000000000000000081529293506001600160a01b0316916385af3c16916110cc918a91869101918252602082015260400190565b600060405180830381600087803b1580156110e657600080fd5b505af11580156110fa573d6000803e3d6000fd5b5050600480546040517f767a7b050000000000000000000000000000000000000000000000000000000081529182018a9052602482018790526001600160a01b0316925063767a7b059150604401600060405180830381600087803b15801561116257600080fd5b505af1158015611176573d6000803e3d6000fd5b5050600480546040517f3e61facd0000000000000000000000000000000000000000000000000000000081529182018a90526001600160a01b038881166024840152169250633e61facd9150604401600060405180830381600087803b1580156111df57600080fd5b505af11580156111f3573d6000803e3d6000fd5b5050336000908152600860205260409020546112129250859150611b65565b3360009081526008602052604081209190915560019055505050505050565b6004805460405163a525323d60e01b81529182018390526001600160a01b03169063a525323d9060240160206040518083038186803b15801561127357600080fd5b505afa158015611287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ab9190611b15565b6112ea5760405162461bcd60e51b815260206004820152601060248201526f15985d5b1d081b5d5cdd08195e1a5cdd60821b60448201526064016104b3565b6004805460405163d4a9b2c560e01b81529182018390526000918291611324916001600160a01b039091169063d4a9b2c5906024016104ee565b909250905060006113358284611b7d565b905060075481106113ae5760405162461bcd60e51b815260206004820152603060248201527f5661756c74206973206e6f742062656c6f77206d696e696d756d20636f6c6c6160448201527f746572616c2070657263656e746167650000000000000000000000000000000060648201526084016104b3565b50505050565b600260005414156114075760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104b3565b60026000908155338152600860205260409020546114675760405162461bcd60e51b815260206004820152601c60248201527f446f6e2774206861766520616e797468696e6720666f7220796f752e0000000060448201526064016104b3565b33600081815260086020526040808220805490839055905190929183156108fc02918491818181858888f193505050501580156114a8573d6000803e3d6000fd5b50506001600055565b6001546001600160a01b0316331461150b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b600555565b6001546001600160a01b0316331461156a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b6001600160a01b0381166115e65760405162461bcd60e51b815260206004820152602760248201527f43616e6e6f742073657420747265617375727920746f20746865207a65726f2060448201527f616464726573730000000000000000000000000000000000000000000000000060648201526084016104b3565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556116178161161a565b50565b6001546001600160a01b031633146116745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b6001600160a01b0381166116f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104b3565b61161781611a4f565b6001546001600160a01b031633146117535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b600655565b60048054604080517f048de381000000000000000000000000000000000000000000000000000000008152905160009384936001600160a01b03169263048de3819281830192602092829003018186803b1580156117b557600080fd5b505afa1580156117c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ed9190611b4d565b61180757634e487b7160e01b600052600160045260246000fd5b60048054604080517f9fc30f1c00000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921692639fc30f1c928282019260209290829003018186803b15801561186257600080fd5b505afa158015611876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189a9190611b4d565b6118b457634e487b7160e01b600052600160045260246000fd5b6000600460009054906101000a90046001600160a01b03166001600160a01b031663048de3816040518163ffffffff1660e01b815260040160206040518083038186803b15801561190457600080fd5b505afa158015611918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193c9190611b4d565b6119469086611b9d565b90508481101561196657634e487b7160e01b600052600160045260246000fd5b6000600460009054906101000a90046001600160a01b03166001600160a01b0316639fc30f1c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119b657600080fd5b505afa1580156119ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ee9190611b4d565b6119f89086611b9d565b905084811015611a1857634e487b7160e01b600052600160045260246000fd5b6000611a25836064611b9d565b9050828111611a4457634e487b7160e01b600052600160045260246000fd5b969095509350505050565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806000611abd8585611758565b90925090506000611ace8284611b7d565b60075411159695505050505050565b600060208284031215611aee578081fd5b81356105f881611be9565b600060208284031215611b0a578081fd5b81516105f881611be9565b600060208284031215611b26578081fd5b815180151581146105f8578182fd5b600060208284031215611b46578081fd5b5035919050565b600060208284031215611b5e578081fd5b5051919050565b60008219821115611b7857611b78611bd3565b500190565b600082611b9857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611bb757611bb7611bd3565b500290565b600082821015611bce57611bce611bd3565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461161757600080fdfea26469706673582212206bb16f7783e98012ec98e2730bcbb112975f13ef3ed8987cf5f9e02e9b6a902464736f6c63430008040033";

export class AVAXLiquidator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    stablecoin: string,
    vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AVAXLiquidator> {
    return super.deploy(
      stablecoin,
      vault,
      overrides || {}
    ) as Promise<AVAXLiquidator>;
  }
  getDeployTransaction(
    stablecoin: string,
    vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stablecoin, vault, overrides || {});
  }
  attach(address: string): AVAXLiquidator {
    return super.attach(address) as AVAXLiquidator;
  }
  connect(signer: Signer): AVAXLiquidator__factory {
    return super.connect(signer) as AVAXLiquidator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AVAXLiquidatorInterface {
    return new utils.Interface(_abi) as AVAXLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AVAXLiquidator {
    return new Contract(address, _abi, signerOrProvider) as AVAXLiquidator;
  }
}
