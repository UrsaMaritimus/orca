/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UrsaVaultType, UrsaVaultTypeInterface } from "../UrsaVaultType";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "base",
        type: "address",
      },
    ],
    name: "CreateVaultType",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "debtCeiling",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "openingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPeg",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "avaxPriceSourceAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumCollateralPercentage",
        type: "uint256",
      },
    ],
    name: "createVaultType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getBase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getClosingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getDebtCeiling",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getMinimumCollateralPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getOpeningFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getPriceSource",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getTokenPriceSource",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getTotalDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
    ],
    name: "setBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_closingFee",
        type: "uint256",
      },
    ],
    name: "setClosingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_debtCeiling",
        type: "uint256",
      },
    ],
    name: "setDebtCeiling",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_percentage",
        type: "uint256",
      },
    ],
    name: "setMinimumCollateralPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_openingFee",
        type: "uint256",
      },
    ],
    name: "setOpeningFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_avaxPriceSourceAddress",
        type: "address",
      },
    ],
    name: "setPriceSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPeg",
        type: "uint256",
      },
    ],
    name: "setTokenPricePeg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vaultTypes",
    outputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "debtCeiling",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "openingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPeg",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "avaxPriceSourceAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumCollateralPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e788061007e6000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638da5cb5b116100cd578063c0b7c71111610081578063e661394711610066578063e6613947146103e1578063f2fde38b146103f4578063fd757a621461040757600080fd5b8063c0b7c711146103bb578063e3fb645b146103ce57600080fd5b8063a9627c1b116100b2578063a9627c1b1461036c578063b1bf010d1461037f578063b278cc4a1461039257600080fd5b80638da5cb5b14610334578063a31e77e61461035957600080fd5b806350e6d22911610124578063715018a611610109578063715018a6146102e657806375a132f6146102ee5780638abab3651461031157600080fd5b806350e6d22914610216578063513545021461023957600080fd5b80632252db4f116101555780632252db4f146101995780633a92d779146101cf578063486501c5146101f257600080fd5b80631b9ad6e514610171578063201383d514610186575b600080fd5b61018461017f366004610dd2565b61041a565b005b610184610194366004610dd2565b6104db565b6101bc6101a7366004610d8f565b60009081526002602052604090206007015490565b6040519081526020015b60405180910390f35b6101bc6101dd366004610d8f565b60009081526002602052604090206005015490565b6101bc610200366004610d8f565b6000908152600260208190526040909120015490565b6101bc610224366004610d8f565b60009081526002602052604090206001015490565b610299610247366004610d8f565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460068601546007909601546001600160a01b03958616979694959394929391929091169088565b604080516001600160a01b03998a16815260208101989098528701959095526060860193909352608085019190915260a084015290921660c082015260e0810191909152610100016101c6565b61018461054a565b6101bc6102fc366004610d8f565b60009081526002602052604090206003015490565b6101bc61031f366004610d8f565b60009081526002602052604090206004015490565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101c6565b610184610367366004610dd2565b6105b0565b61018461037a366004610d2d565b6106a6565b6101bc61038d366004610d8f565b61085c565b6103416103a0366004610d8f565b6000908152600260205260409020546001600160a01b031690565b6101846103c9366004610da7565b610910565b6101846103dc366004610dd2565b610a24565b6101846103ef366004610da7565b610a93565b610184610402366004610d0c565b610b28565b610184610415366004610dd2565b610c0a565b6000546001600160a01b031633146104795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b806104c65760405162461bcd60e51b815260206004820152601960248201527f506567206d757374206265206c6172676572207468616e2030000000000000006044820152606401610470565b60009182526002602052604090912060050155565b6000546001600160a01b031633146105355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b60009182526002602052604090912060030155565b6000546001600160a01b031633146105a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b6105ae6000610c79565b565b6000546001600160a01b0316331461060a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b6000828152600260205260409020600101548110156106915760405162461bcd60e51b815260206004820152603c60248201527f7365744365696c696e673a204d757374206265206f7665722074686520616d6f60448201527f756e74206f662063757272656e742064656274206365696c696e672e000000006064820152608401610470565b60009182526002602052604090912060010155565b6000546001600160a01b031633146107005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b6001600160a01b03821661072457634e487b7160e01b600052600160045260246000fd5b8061073f57634e487b7160e01b600052600160045260246000fd5b61074d600180546001019055565b600061075860015490565b60408051610100810182526001600160a01b038b811680835260208084018d81526000858701818152606087018f8152608088018f815260a089018f81528e891660c08b0190815260e08b018f81528d87526002808a52968d90208c518154908d1673ffffffffffffffffffffffffffffffffffffffff1991821617825598516001820155955196860196909655925160038501559051600484015551600583015551600682018054919097169316929092179094559251600790930192909255835185815291820152929350917f651acbfa5513afddb0b87fd90caea4789029251f3ba34f4840d3fc993113f8a3910160405180910390a1505050505050505050565b6000818152600260205260408082206006015481517ffeaf968c00000000000000000000000000000000000000000000000000000000815291516001600160a01b03909116918391839163feaf968c9160048083019260a0929190829003018186803b1580156108cb57600080fd5b505afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190610df3565b5091979650505050505050565b6000546001600160a01b0316331461096a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b6001600160a01b0381166109e65760405162461bcd60e51b815260206004820152602360248201527f507269636520736f757263652063616e6e6f74206265207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610470565b600091825260026020526040909120600601805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6000546001600160a01b03163314610a7e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b60009182526002602052604090912060040155565b6000546001600160a01b03163314610aed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b600091825260026020526040909120805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6000546001600160a01b03163314610b825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b6001600160a01b038116610bfe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610470565b610c0781610c79565b50565b6000546001600160a01b03163314610c645760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610470565b60009182526002602052604090912060070155565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610ced57600080fd5b919050565b805169ffffffffffffffffffff81168114610ced57600080fd5b600060208284031215610d1d578081fd5b610d2682610cd6565b9392505050565b600080600080600080600060e0888a031215610d47578283fd5b610d5088610cd6565b965060208801359550604088013594506060880135935060808801359250610d7a60a08901610cd6565b915060c0880135905092959891949750929550565b600060208284031215610da0578081fd5b5035919050565b60008060408385031215610db9578182fd5b82359150610dc960208401610cd6565b90509250929050565b60008060408385031215610de4578182fd5b50508035926020909101359150565b600080600080600060a08688031215610e0a578081fd5b610e1386610cf2565b9450602086015193506040860151925060608601519150610e3660808701610cf2565b9050929550929590935056fea264697066735822122040f5df7921985426a44ccdc2528cbbd9dd851c725ea4bd05f7f933d8cdea883364736f6c63430008040033";

export class UrsaVaultType__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UrsaVaultType> {
    return super.deploy(overrides || {}) as Promise<UrsaVaultType>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UrsaVaultType {
    return super.attach(address) as UrsaVaultType;
  }
  connect(signer: Signer): UrsaVaultType__factory {
    return super.connect(signer) as UrsaVaultType__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UrsaVaultTypeInterface {
    return new utils.Interface(_abi) as UrsaVaultTypeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UrsaVaultType {
    return new Contract(address, _abi, signerOrProvider) as UrsaVaultType;
  }
}
