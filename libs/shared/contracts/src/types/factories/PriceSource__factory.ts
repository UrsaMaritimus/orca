/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceSource, PriceSourceInterface } from "../PriceSource";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "_price",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x69ba8652",
        type: "bytes32",
      },
    ],
    name: "c_0x69ba8652",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610537380380610537833981810160405281019061003291906100ee565b6100647f392d01ae29c3d9306e4c7b2e664c051a839cae94f1ff1ab10ceee3ac8bd517fb60001b6100d660201b60201c565b6100967fbe81baa8e18f8d6fa140f43f59290b15fa9e9c46c2970721617fe1e9a9cbe35060001b6100d660201b60201c565b6100c87fd6d0f360ff9a66b61c73ac58eeab9d01dfd6eb2c661d6b9b8c16ee5ffca8870e60001b6100d660201b60201c565b806080818152505050610138565b50565b6000815190506100e881610121565b92915050565b60006020828403121561010057600080fd5b600061010e848285016100d9565b91505092915050565b6000819050919050565b61012a81610117565b811461013557600080fd5b50565b6080516103e4610153600039600061016601526103e46000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063296570c61461003b578063feaf968c14610057575b600080fd5b610055600480360381019061005091906102ba565b610079565b005b61005f61007c565b604051610070959493929190610310565b60405180910390f35b50565b60008060008060006100b07faf640421c69b406c324f18aafdd8e7c18b7fa0529116b919a7d519eb4db0b0de60001b610079565b6100dc7fdb0dfe9f527aa12395df1d8cbac32e78fff2635b418a7a1630d4a68f6c8b0c3b60001b610079565b6101087f1526c898f6981e010bc24f1bb52ead5e20c50207482ee3c77649babf2cb6b36b60001b610079565b600194506101387f170730c07d45f69e156531983acdb4fffdb7d7724512cf8778d97a51d1afa6f860001b610079565b6101647f18e1680ca894df827ae2efc2af49bd8a04b0167f83425c6f2fee5eb5210ac7c360001b610079565b7f000000000000000000000000000000000000000000000000000000000000000093506101b37f2c556678644257e6f369f31a4adce2f69754fa4e28f3ac89b6011d5a9d2688c760001b610079565b6101df7f2a80a1ae343546ae1afb1f50dfef6843373dc59f666dd7382f2829d76ea7fa4860001b610079565b6001925061020f7f7b234416dfc3503fa2f7e58ee2d8bb84c6d0b5fddf968e837d4f347a5ec97ea660001b610079565b61023b7f8aa2826e9ab54a32bfd9703a13860b70080c1ecf7f3981d0346fc5dfcb65461f60001b610079565b6002915061026b7fb069871c2f4501390a41a5b519ceca0b64e8416ecad4dceed5e027d156db894460001b610079565b6102977f3fde74a4528e1cff848521849dcf96f107530b13e4a0e8162c525b0b0d688c3b60001b610079565b6305d955e590509091929394565b6000813590506102b481610397565b92915050565b6000602082840312156102cc57600080fd5b60006102da848285016102a5565b91505092915050565b6102ec8161036d565b82525050565b6102fb81610377565b82525050565b61030a81610381565b82525050565b600060a0820190506103256000830188610301565b61033260208301876102e3565b61033f60408301866102f2565b61034c60608301856102f2565b6103596080830184610301565b9695505050505050565b6000819050919050565b6000819050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6103a081610363565b81146103ab57600080fd5b5056fea2646970667358221220efd1c82f816fcd9fe1068cba688b3d9006e9cf448d57ac3b29ea887ea091b55d64736f6c63430008040033";

export class PriceSource__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceSource> {
    return super.deploy(_price, overrides || {}) as Promise<PriceSource>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_price, overrides || {});
  }
  attach(address: string): PriceSource {
    return super.attach(address) as PriceSource;
  }
  connect(signer: Signer): PriceSource__factory {
    return super.connect(signer) as PriceSource__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceSourceInterface {
    return new utils.Interface(_abi) as PriceSourceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceSource {
    return new Contract(address, _abi, signerOrProvider) as PriceSource;
  }
}
