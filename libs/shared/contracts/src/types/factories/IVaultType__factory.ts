/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IVaultType, IVaultTypeInterface } from "../IVaultType";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "base",
        type: "address",
      },
    ],
    name: "CreateVaultType",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "debtCeiling",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "openingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPeg",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "avaxPriceSourceAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumCollateralPercentage",
        type: "uint256",
      },
    ],
    name: "createVaultType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getBase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getClosingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getDebtCeiling",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getMinimumCollateralPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getOpeningFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getPriceSource",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getTokenPriceSource",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
    ],
    name: "getTotalDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
    ],
    name: "setBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_closingFee",
        type: "uint256",
      },
    ],
    name: "setClosingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_debtCeiling",
        type: "uint256",
      },
    ],
    name: "setDebtCeiling",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_percentage",
        type: "uint256",
      },
    ],
    name: "setMinimumCollateralPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_openingFee",
        type: "uint256",
      },
    ],
    name: "setOpeningFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_priceSource",
        type: "address",
      },
    ],
    name: "setPriceSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPriceSource",
        type: "uint256",
      },
    ],
    name: "setTokenPricePeg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IVaultType__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultTypeInterface {
    return new utils.Interface(_abi) as IVaultTypeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IVaultType {
    return new Contract(address, _abi, signerOrProvider) as IVaultType;
  }
}
