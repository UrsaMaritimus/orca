/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { ILiquidator, ILiquidatorInterface } from '../ILiquidator';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'CreateVaultType',
    type: 'event',
  },
];

export class ILiquidator__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidatorInterface {
    return new utils.Interface(_abi) as ILiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILiquidator {
    return new Contract(address, _abi, signerOrProvider) as ILiquidator;
  }
}
