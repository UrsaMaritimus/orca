/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PriceSource, PriceSourceInterface } from '../PriceSource';

const _abi = [
  {
    inputs: [
      {
        internalType: 'int256',
        name: '_price',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'latestRoundData',
    outputs: [
      {
        internalType: 'uint80',
        name: 'roundId',
        type: 'uint80',
      },
      {
        internalType: 'int256',
        name: 'answer',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'startedAt',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'updatedAt',
        type: 'uint256',
      },
      {
        internalType: 'uint80',
        name: 'answeredInRound',
        type: 'uint80',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405234801561001057600080fd5b5060405161011a38038061011a83398101604081905261002f91610037565b60805261004f565b600060208284031215610048578081fd5b5051919050565b60805160b361006760003960006038015260b36000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063feaf968c14602d575b600080fd5b6040805160018082527f0000000000000000000000000000000000000000000000000000000000000000602083015281830152600260608201526305d955e5608082015290519081900360a00190f3fea264697066735822122067dd017d92c9065fb0012cdf2f22bff4f675ca6bc065a72190c077c7649196ad64736f6c63430008040033';

export class PriceSource__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceSource> {
    return super.deploy(_price, overrides || {}) as Promise<PriceSource>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_price, overrides || {});
  }
  attach(address: string): PriceSource {
    return super.attach(address) as PriceSource;
  }
  connect(signer: Signer): PriceSource__factory {
    return super.connect(signer) as PriceSource__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceSourceInterface {
    return new utils.Interface(_abi) as PriceSourceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceSource {
    return new Contract(address, _abi, signerOrProvider) as PriceSource;
  }
}
