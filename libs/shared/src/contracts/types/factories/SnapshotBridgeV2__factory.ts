/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SnapshotBridgeV2,
  SnapshotBridgeV2Interface,
} from '../SnapshotBridgeV2';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address payable',
        name: '_staking',
        type: 'address',
      },
      {
        internalType: 'address payable',
        name: '_podleader',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_orca',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_xorca',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'pid',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'podLeaderVote',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'pid',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'stakingPoolVote',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'pid',
        type: 'uint256',
      },
    ],
    name: 'xOrcaStakedVote',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'xOrcaVote',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610d67380380610d6783398101604081905261002f91610082565b600080546001600160a01b039586166001600160a01b03199182161790915560018054948616948216949094179093556003805492851692841692909217909155600280549190931691161790556100f8565b60008060008060808587031215610097578384fd5b84516100a2816100e0565b60208601519094506100b3816100e0565b60408601519093506100c4816100e0565b60608601519092506100d5816100e0565b939692955090935050565b6001600160a01b03811681146100f557600080fd5b50565b610c60806101076000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806330616b9e1461005157806397ae44e514610076578063ce03505214610089578063fceb751b1461009c575b600080fd5b61006461005f36600461092a565b6100af565b60405190815260200160405180910390f35b610064610084366004610a5f565b61027b565b610064610097366004610a5f565b6106a0565b6100646100aa366004610969565b61072d565b600080600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561010057600080fd5b505afa158015610114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101389190610a47565b6003546002546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a082319060240160206040518083038186803b15801561018557600080fd5b505afa158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd9190610a47565b90506000826101ce83612710610bdd565b6101d89190610ad2565b6002546040516370a0823160e01b81526001600160a01b0388811660048301529293506000926127109216906370a082319060240160206040518083038186803b15801561022557600080fd5b505afa158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d9190610a47565b6102679084610bdd565b6102719190610ad2565b9695505050505050565b6001546040517f1526fe270000000000000000000000000000000000000000000000000000000081526004810184905260009182916001600160a01b0390911690631526fe279060240160c06040518083038186803b1580156102dd57600080fd5b505afa1580156102f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103159190610994565b50506001546040516393f1a40b60e01b8152600481018a90526001600160a01b03898116602483015295965060009590911693506393f1a40b92506044019050604080518083038186803b15801561036c57600080fd5b505afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190610a8e565b50905060008290506000816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e757600080fd5b505afa1580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f919061094d565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561045c57600080fd5b505afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104949190610a47565b90506000836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d157600080fd5b505afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190610ab1565b60ff169050600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561054a57600080fd5b505afa15801561055e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058291906109f9565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060008411610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f43616e6e6f7420646976696465206279207a65726f0000000000000000000000604482015260640160405180910390fd5b6003546001600160a01b03868116911614156106825760008461063985600a610b35565b6106439085610bdd565b61064d9190610ad2565b9050600061065c85600a610b35565b610666838b610bdd565b6106709190610ad2565b9a5061069a9950505050505050505050565b60008461069085600a610b35565b6106439084610bdd565b92915050565b600080546040516393f1a40b60e01b8152600481018590526001600160a01b038481166024830152839216906393f1a40b90604401604080518083038186803b1580156106ec57600080fd5b505afa158015610700573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107249190610a8e565b50949350505050565b600080600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561077e57600080fd5b505afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190610a47565b6003546002546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a082319060240160206040518083038186803b15801561080357600080fd5b505afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190610a47565b905060008261084c83612710610bdd565b6108569190610ad2565b6001546040516393f1a40b60e01b8152600481018890526001600160a01b038981166024830152929350600092909116906393f1a40b90604401604080518083038186803b1580156108a757600080fd5b505afa1580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df9190610a8e565b50905060006127106108f18385610bdd565b6108fb9190610ad2565b98975050505050505050565b80516dffffffffffffffffffffffffffff8116811461092557600080fd5b919050565b60006020828403121561093b578081fd5b813561094681610c12565b9392505050565b60006020828403121561095e578081fd5b815161094681610c12565b6000806040838503121561097b578081fd5b823561098681610c12565b946020939093013593505050565b60008060008060008060c087890312156109ac578182fd5b86516109b781610c12565b809650506020870151945060408701519350606087015192506080870151915060a087015161ffff811681146109eb578182fd5b809150509295509295509295565b600080600060608486031215610a0d578283fd5b610a1684610907565b9250610a2460208501610907565b9150604084015163ffffffff81168114610a3c578182fd5b809150509250925092565b600060208284031215610a58578081fd5b5051919050565b60008060408385031215610a71578182fd5b823591506020830135610a8381610c12565b809150509250929050565b60008060408385031215610aa0578182fd5b505080516020909101519092909150565b600060208284031215610ac2578081fd5b815160ff81168114610946578182fd5b600082610aed57634e487b7160e01b81526012600452602481fd5b500490565b600181815b80851115610b2d578160001904821115610b1357610b13610bfc565b80851615610b2057918102915b93841c9390800290610af7565b509250929050565b60006109468383600082610b4b5750600161069a565b81610b585750600061069a565b8160018114610b6e5760028114610b7857610b94565b600191505061069a565b60ff841115610b8957610b89610bfc565b50506001821b61069a565b5060208310610133831016604e8410600b8410161715610bb7575081810a61069a565b610bc18383610af2565b8060001904821115610bd557610bd5610bfc565b029392505050565b6000816000190483118215151615610bf757610bf7610bfc565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610c2757600080fd5b5056fea26469706673582212206f40c8b01f1cf24dbaf4922090c7838f4e6e664906bb1a0145e1c8cefbac405464736f6c63430008040033';

export class SnapshotBridgeV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _staking: string,
    _podleader: string,
    _orca: string,
    _xorca: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SnapshotBridgeV2> {
    return super.deploy(
      _staking,
      _podleader,
      _orca,
      _xorca,
      overrides || {}
    ) as Promise<SnapshotBridgeV2>;
  }
  getDeployTransaction(
    _staking: string,
    _podleader: string,
    _orca: string,
    _xorca: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _staking,
      _podleader,
      _orca,
      _xorca,
      overrides || {}
    );
  }
  attach(address: string): SnapshotBridgeV2 {
    return super.attach(address) as SnapshotBridgeV2;
  }
  connect(signer: Signer): SnapshotBridgeV2__factory {
    return super.connect(signer) as SnapshotBridgeV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnapshotBridgeV2Interface {
    return new utils.Interface(_abi) as SnapshotBridgeV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SnapshotBridgeV2 {
    return new Contract(address, _abi, signerOrProvider) as SnapshotBridgeV2;
  }
}
