/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ORCA, ORCAInterface } from "../ORCA";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b50604051806040016040528060078152602001664f72636144414f60c81b81525080604051806040016040528060018152602001603160f81b815250604051806040016040528060078152602001664f72636144414f60c81b815250604051806040016040528060048152602001634f52434160e01b8152508160039080519060200190620000c8929190620007ab565b508051620000de906004906020840190620007ab565b5050825160209384012082519284019290922060c083815260e08290524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818a018190528183019890985260608101959095526080808601939093523085830152805180860390920182529390920190925280519401939093209092526101005250620001839050336a7c13bc4b2c133c5600000062000189565b620008cf565b620001a08282620001a460201b62000b451760201c565b5050565b620001bb82826200025b60201b62000be21760201c565b6001600160e01b03620001cf6200034a8216565b11156200023c5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b62000255600862000ccd6200035060201b178362000365565b50505050565b6001600160a01b038216620002b35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000233565b8060026000828254620002c7919062000847565b90915550506001600160a01b03821660009081526020819052604081208054839290620002f690849062000847565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3620001a06000838362000540565b60025490565b60006200035e828462000847565b9392505050565b825460009081908015620003c357856200038160018362000862565b81548110620003a057634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316620003c6565b60005b6001600160e01b03169250620003dd83858760201c565b91506000811180156200042d57504386620003fa60018462000862565b815481106200041957634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff16145b15620004ad5762000449826200055860201b62000cd91760201c565b866200045760018462000862565b815481106200047657634e487b7160e01b600052603260045260246000fd5b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b0316021790555062000532565b856040518060400160405280620004cf43620005c760201b62000d5c1760201c565b63ffffffff168152602001620004f0856200055860201b62000cd91760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b505050565b6200053b8383836200062e60201b62000dd81760201c565b60006001600160e01b03821115620005c35760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000233565b5090565b600063ffffffff821115620005c35760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000233565b620006468383836200053b60201b62000e0a1760201c565b6001600160a01b038381166000908152600660205260408082205485841683529120546200053b92918216911683818314801590620006855750600081115b156200053b576001600160a01b0383161562000712576001600160a01b038316600090815260076020908152604082208291620006cf91906200079d901b62000e0f178562000365565b91509150846001600160a01b0316600080516020620025bc833981519152838360405162000707929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156200053b576001600160a01b03821660009081526007602090815260408220829162000756919062000350901b62000ccd178562000365565b91509150836001600160a01b0316600080516020620025bc83398151915283836040516200078e929190918252602082015260400190565b60405180910390a25050505050565b60006200035e828462000862565b828054620007b9906200087c565b90600052602060002090601f016020900481019282620007dd576000855562000828565b82601f10620007f857805160ff191683800117855562000828565b8280016001018555821562000828579182015b82811115620008285782518255916020019190600101906200080b565b50620005c39291505b80821115620005c3576000815560010162000831565b600082198211156200085d576200085d620008b9565b500190565b600082821015620008775762000877620008b9565b500390565b600181811c908216806200089157607f821691505b60208210811415620008b357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e0516101005161012051611c9d6200091f60003960006109a3015260006111e6015260006112350152600061121001526000611194015260006111bd0152611c9d6000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c806370a08231116100d8578063a457c2d71161008c578063d505accf11610066578063d505accf1461034e578063dd62ed3e14610361578063f1127ed81461039a57600080fd5b8063a457c2d714610315578063a9059cbb14610328578063c3cda5201461033b57600080fd5b80638e539e8c116100bd5780638e539e8c146102e757806395d89b41146102fa5780639ab24eb01461030257600080fd5b806370a08231146102ab5780637ecebe00146102d457600080fd5b80633644e5151161013a578063587cde1e11610114578063587cde1e1461022a5780635c19a95c1461026e5780636fcfff451461028357600080fd5b80633644e515146101fc57806339509351146102045780633a46b1a81461021757600080fd5b806318160ddd1161016b57806318160ddd146101c857806323b872dd146101da578063313ce567146101ed57600080fd5b806306fdde0314610187578063095ea7b3146101a5575b600080fd5b61018f6103d7565b60405161019c9190611b5c565b60405180910390f35b6101b86101b3366004611a86565b610469565b604051901515815260200161019c565b6002545b60405190815260200161019c565b6101b86101e83660046119e2565b61047f565b6040516012815260200161019c565b6101cc610543565b6101b8610212366004611a86565b610552565b6101cc610225366004611a86565b61058e565b610256610238366004611996565b6001600160a01b039081166000908152600660205260409020541690565b6040516001600160a01b03909116815260200161019c565b61028161027c366004611996565b610608565b005b610296610291366004611996565b610615565b60405163ffffffff909116815260200161019c565b6101cc6102b9366004611996565b6001600160a01b031660009081526020819052604090205490565b6101cc6102e2366004611996565b61063d565b6101cc6102f5366004611b44565b61065b565b61018f6106b7565b6101cc610310366004611996565b6106c6565b6101b8610323366004611a86565b61075b565b6101b8610336366004611a86565b61080c565b610281610349366004611aaf565b610819565b61028161035c366004611a1d565b61094f565b6101cc61036f3660046119b0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6103ad6103a8366004611b06565b610ab3565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161019c565b6060600380546103e690611bf2565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611bf2565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050905090565b6000610476338484610e1b565b50600192915050565b600061048c848484610f73565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561052b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105388533858403610e1b565b506001949350505050565b600061054d611190565b905090565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610476918590610589908690611baf565b610e1b565b60004382106105df5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610522565b6001600160a01b03831660009081526007602052604090206106019083611283565b9392505050565b610612338261135c565b50565b6001600160a01b03811660009081526007602052604081205461063790610d5c565b92915050565b6001600160a01b038116600090815260056020526040812054610637565b60004382106106ac5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610522565b610637600883611283565b6060600480546103e690611bf2565b6001600160a01b0381166000908152600760205260408120548015610748576001600160a01b0383166000908152600760205260409020610708600183611bdb565b8154811061072657634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b031661074b565b60005b6001600160e01b03169392505050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107f55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610522565b6108023385858403610e1b565b5060019392505050565b6000610476338484610f73565b834211156108695760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610522565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906108e3906108db9060a001604051602081830303815290604052805190602001206113ed565b858585611456565b90506108ee816115ff565b861461093c5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610522565b610946818861135c565b50505050505050565b8342111561099f5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610522565b60007f00000000000000000000000000000000000000000000000000000000000000008888886109ce8c6115ff565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a29826113ed565b90506000610a3982878787611456565b9050896001600160a01b0316816001600160a01b031614610a9c5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610522565b610aa78a8a8a610e1b565b50505050505050505050565b60408051808201909152600080825260208201526001600160a01b0383166000908152600760205260409020805463ffffffff8416908110610b0557634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610b4f8282610be2565b6002546001600160e01b031015610bce5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152608401610522565b610bdc6008610ccd83611627565b50505050565b6001600160a01b038216610c385760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610522565b8060026000828254610c4a9190611baf565b90915550506001600160a01b03821660009081526020819052604081208054839290610c77908490611baf565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610cc9600083836117ca565b5050565b60006106018284611baf565b60006001600160e01b03821115610d585760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610522565b5090565b600063ffffffff821115610d585760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610522565b6001600160a01b03838116600090815260066020526040808220548584168352912054610e0a929182169116836117d5565b505050565b60006106018284611bdb565b6001600160a01b038316610e965760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610522565b6001600160a01b038216610f125760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610522565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610fef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610522565b6001600160a01b03821661106b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610522565b6001600160a01b038316600090815260208190526040902054818110156110fa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610522565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611131908490611baf565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161117d91815260200190565b60405180910390a3610bdc8484846117ca565b60007f00000000000000000000000000000000000000000000000000000000000000004614156111df57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090815b818110156112f557600061129e8284611912565b9050848682815481106112c157634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff1611156112e1578092506112ef565b6112ec816001611baf565b91505b5061128a565b81156113475784611307600184611bdb565b8154811061132557634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b031661134a565b60005b6001600160e01b031695945050505050565b6001600160a01b038281166000818152600660208181526040808420805485845282862054949093528787167fffffffffffffffffffffffff00000000000000000000000000000000000000008416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610bdc8284836117d5565b60006106376113fa611190565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156114d35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610522565b8360ff16601b14806114e857508360ff16601c145b61153f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610522565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611593573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115f65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610522565b95945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b8254600090819080156116805785611640600183611bdb565b8154811061165e57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316611683565b60005b6001600160e01b0316925061169c83858763ffffffff16565b91506000811180156116e8575043866116b6600184611bdb565b815481106116d457634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff16145b15611756576116f682610cd9565b86611702600184611bdb565b8154811061172057634e487b7160e01b600052603260045260246000fd5b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506117c1565b85604051806040016040528061176b43610d5c565b63ffffffff16815260200161177f85610cd9565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b610e0a838383610dd8565b816001600160a01b0316836001600160a01b0316141580156117f75750600081115b15610e0a576001600160a01b03831615611885576001600160a01b0383166000908152600760205260408120819061183290610e0f85611627565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161187a929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610e0a576001600160a01b038216600090815260076020526040812081906118bb90610ccd85611627565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611903929190918252602082015260400190565b60405180910390a25050505050565b600060026119208184611c27565b61192b600286611c27565b6119359190611baf565b61193f9190611bc7565b61194a600284611bc7565b611955600286611bc7565b61195f9190611baf565b6106019190611baf565b80356001600160a01b038116811461198057600080fd5b919050565b803560ff8116811461198057600080fd5b6000602082840312156119a7578081fd5b61060182611969565b600080604083850312156119c2578081fd5b6119cb83611969565b91506119d960208401611969565b90509250929050565b6000806000606084860312156119f6578081fd5b6119ff84611969565b9250611a0d60208501611969565b9150604084013590509250925092565b600080600080600080600060e0888a031215611a37578283fd5b611a4088611969565b9650611a4e60208901611969565b95506040880135945060608801359350611a6a60808901611985565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611a98578182fd5b611aa183611969565b946020939093013593505050565b60008060008060008060c08789031215611ac7578182fd5b611ad087611969565b95506020870135945060408701359350611aec60608801611985565b92506080870135915060a087013590509295509295509295565b60008060408385031215611b18578182fd5b611b2183611969565b9150602083013563ffffffff81168114611b39578182fd5b809150509250929050565b600060208284031215611b55578081fd5b5035919050565b6000602080835283518082850152825b81811015611b8857858101830151858201604001528201611b6c565b81811115611b995783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115611bc257611bc2611c3b565b500190565b600082611bd657611bd6611c51565b500490565b600082821015611bed57611bed611c3b565b500390565b600181811c90821680611c0657607f821691505b6020821081141561162157634e487b7160e01b600052602260045260246000fd5b600082611c3657611c36611c51565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212205b6b56bb0128cf73bd20bab0ecb6962547bc2b7763b3f709a9edb036b92c67e764736f6c63430008040033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

export class ORCA__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ORCA> {
    return super.deploy(overrides || {}) as Promise<ORCA>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ORCA {
    return super.attach(address) as ORCA;
  }
  connect(signer: Signer): ORCA__factory {
    return super.connect(signer) as ORCA__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ORCAInterface {
    return new utils.Interface(_abi) as ORCAInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ORCA {
    return new Contract(address, _abi, signerOrProvider) as ORCA;
  }
}
